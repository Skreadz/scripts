---
- name: Add repo ppa:remmina-ppa-team/remmina-next-daily
  shell:
          "add-apt-repository ppa:remmina-ppa-team/remmina-next-daily"

- name: Update apt-get repo and cache
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

- name: Upgrade all apt packages
  apt: upgrade=dist force_apt_get=yes

- name: Install dependencies Guac
  shell:
          "apt install -y gcc vim curl wget g++ libcairo2-dev libjpeg-turbo8-dev libpng-dev libtool-bin libossp-uuid-dev libavcodec-dev  libavformat-dev libavutil-dev libswscale-dev build-essential libpango1.0-dev libssh2-1-dev libvncserver-dev libtelnet-dev libpulse-dev libssl-dev libvorbis-dev libwebp-dev libwebsockets-dev ubuntu-desktop-minimal freerdp2-dev freerdp2-x11 xrdp -y"

- name: Install jdk + wget
  apt:
    name: ['openjdk-11-jdk', 'wget']
    state: present

- name: Add User Tomcat
  shell:
          "useradd -m -U -d /opt/tomcat -s /bin/false tomcat"

- name: "Download Apache Tomcat"
  get_url:
    url: https://downloads.apache.org/tomcat/tomcat-9/v9.0.78/bin/apache-tomcat-9.0.78.tar.gz
    dest: "/tmp/apache-tomcat-9.0.78.tar.gz"

- name: Extract Apache Tomcat
  ansible.builtin.unarchive:
   src: /tmp/apache-tomcat-9.0.78.tar.gz
   dest: /opt/tomcat
   #remote_src: true # // option pour cibler l'hôte distant

- name: Copy file with new name
  ansible.builtin.copy:
    src: "/opt/tomcat/apache-tomcat-9.0.78"
    dest: "/opt/tomcat/tomcatapp"

- name: Recursively change ownership of a directory
  ansible.builtin.file:
    path: /opt/tomcat
    state: directory
    recurse: yes
    owner: tomcat
    group: tomcat

- name: .sh executable
  shell:
        find /opt/tomcat/tomcatapp/bin/ -type f -iname "*.sh" -exec chmod +x {} \;

- name: Add the Tomcat systemd file.
  copy:
    dest: "/etc/systemd/system/tomcat.service"
    content: |
        [Unit]
        Description=Tomcat 9 servlet container
        After=network.target

        [Service]
        Type=forking

        User=tomcat
        Group=tomcat

        Environment="JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64"
        Environment="JAVA_OPTS=-Djava.security.egd=file:///dev/urandom -Djava.awt.headless=true"

        Environment="CATALINA_BASE=/opt/tomcat/tomcatapp"
        Environment="CATALINA_HOME=/opt/tomcat/tomcatapp"
        Environment="CATALINA_PID=/opt/tomcat/tomcatapp/temp/tomcat.pid"
        Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"

        ExecStart=/opt/tomcat/tomcatapp/bin/startup.sh
        ExecStop=/opt/tomcat/tomcatapp/bin/shutdown.sh

        [Install]
        WantedBy=multi-user.target

- name: Restart daemon-reload
  shell:
        systemctl daemon-reload

- name: Enable Tomcat service
  ansible.builtin.systemd:
    name: tomcat
    enabled: true

- name: "Download Guac"
  get_url:
    url: https://apache.org/dyn/closer.lua/guacamole/1.4.0/source/guacamole-server-1.4.0.tar.gz
    dest: "/tmp/guacamole-server-1.4.0.tar.gz"

- name: Extract Apache Tomcat
  ansible.builtin.unarchive:
   src: /tmp/guacamole-server-1.4.0.tar.gz
   dest: /tmp/guacamole-server-1.4.0
   remote_src: true # // option pour cibler l'hôte distant

- name: Script Guac
  shell:
        cd /tmp/guacamole-server-1.4.0 && ./configure --with-init-dir=/etc/init.d

- name: Make Install
  shell:
        cd /tmp/guacamole-server-1.4.0 && make && make install

- name: Creates directory
  file:
    path: /etc/guacamole
    state: directory

- name: Add the guacd.conf file
  copy:
    dest: "/etc/guacamole/guacd.conf"
    content: |
        [daemon]
        pid_file = /var/run/guacd.pid
        #log_level = debug

        [server]
        #bind_host = localhost
        bind_host = 127.0.0.1
        bind_port = 4822

        #[ssl]
        #server_certificate = /etc/ssl/certs/guacd.crt
        #server_key = /etc/ssl/private/guacd.key

- name: Restart daemon-reload
  shell:
        systemctl daemon-reload

- name: Enable Apache guac
  ansible.builtin.systemd:
    name: guacd
    state: started
    enabled: true

- name: Download Guac Web Application
  get_url:
    url: https://archive.apache.org/dist/guacamole/1.4.0/binary/guacamole-1.4.0.war
    dest: "/etc/guacamole/guacamole.war"

- name: Création d'un lien symbolique
  ansible.builtin.file:
    src: "/etc/guacamole/guacamole.war"
    dest: /opt/tomcat/tomcatapp/webapps
    owner: tomcat
    group: tomcat
    state: link

- name: "/etc/default/tomcat"
  lineinfile:
    dest: /etc/default/tomcat
    insertafter: EOF
    line: 'GUACAMOLE_HOME=/etc/guacamole'

- name: "/etc/profile"
  lineinfile:
    dest: /etc/profile
    insertafter: EOF
    line: 'export GUACAMOLE_HOME=/etc/guacamole'

- name: Add /etc/guacamole/guacamole.properties
  copy:
    dest: "/etc/guacamole/guacamole.properties"
    content: |
        guacd-hostname: localhost
        guacd-port:  4822
        user-mapping:  /etc/guacamole/user-mapping.xml
        auth-provider:  net.sourceforge.guacamole.net.basic.BasicFileAuthenticationProvider

- name: Création d'un lien symbolique
  ansible.builtin.file:
    src: "/opt/tomcat/tomcatapp"
    dest: /etc/guacamole
    owner: tomcat
    group: tomcat
    state: link

- name: Add /etc/guacamole/user-mapping.xml
  copy:
    dest: "/etc/guacamole/user-mapping.xml"
    content: |
        <user-mapping>
            <authorize
                    username="layerstack"
                    password="c5bb09e5d3a11808cd43ae554eee9c85"
                    encoding="md5">
              <connection name="LayerStack Ubuntu SSH">
                  <protocol>ssh</protocol>
                  <param name="hostname">123.123.123.123</param>
                  <param name="port">22</param>
                  <param name="username">root</param>
              </connection>
              <connection name="LayerStack Ubuntu RDP">
                  <protocol>rdp</protocol>
                  <param name="hostname">123.123.123.123</param>
                  <param name="port">3389</param>
              </connection>
            </authorize>
        </user-mapping>

- name: Restart Tomcat service
  ansible.builtin.systemd:
    name: tomcat
    state: reloaded

- name: Restart guacd service
  ansible.builtin.systemd:
    name: guacd
    state: reloaded